name: "Pull request"
on:
  - pull_request
env:
  tf_version: 'latest'

jobs:
  validate-plan-terraform:
    name: Terraform Validate
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: tf
    steps:
      - uses: actions/checkout@v2
      - uses: hashicorp/setup-terraform@v2
      - name: Terraform Init
        id: init
        run: terraform init -backend-config backend/staging.tfvars
        env:
          ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
          ARM_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}
          ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
          SNOWFLAKE_PRIVATE_KEY: ${{ secrets.SNOWFLAKE_PRIVATE_KEY }}
          TF_VAR_sas_token_sensors_sandbox: ${{ secrets.SAS_TOKEN_SENSORS_SANDBOX }}
          TF_VAR_sas_token_predictions_sandbox: ${{ secrets.SAS_TOKEN_PREDICTIONS_SANDBOX }}
      - name: Terraform Format
        id: format
        run: terraform fmt -check -recursive
      - name: Terraform Validate
        id: validate
        run: terraform validate
        env:
          SNOWFLAKE_USER: ${{ secrets.SNOWFLAKE_USER }}
          SNOWFLAKE_PRIVATE_KEY: ${{ secrets.SNOWFLAKE_PRIVATE_KEY }}
          SNOWFLAKE_ACCOUNT: ${{ secrets.SNOWFLAKE_ACCOUNT }}
          SNOWFLAKE_REGION: ${{ secrets.SNOWFLAKE_REGION}}
          TF_VAR_sas_token_sensors_sandbox: ${{ secrets.SAS_TOKEN_SENSORS_SANDBOX }}
          TF_VAR_sas_token_predictions_sandbox: ${{ secrets.SAS_TOKEN_PREDICTIONS_SANDBOX }}
      - name: Terraform Plan
        id: plan
        run: terraform plan -var-file vars/staging.tfvars
        env:
          ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
          ARM_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}
          ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
          SNOWFLAKE_USER: ${{ secrets.SNOWFLAKE_USER }}
          SNOWFLAKE_PRIVATE_KEY: ${{ secrets.SNOWFLAKE_PRIVATE_KEY }}
          SNOWFLAKE_ACCOUNT: ${{ secrets.SNOWFLAKE_ACCOUNT }}
          SNOWFLAKE_REGION: ${{ secrets.SNOWFLAKE_REGION}}
          TF_VAR_sas_token_sensors_sandbox: ${{ secrets.SAS_TOKEN_SENSORS_SANDBOX }}
          TF_VAR_sas_token_predictions_sandbox: ${{ secrets.SAS_TOKEN_PREDICTIONS_SANDBOX }}
  linting-testing:
    name: Check formatting and run tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Setting up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.10.x
      - name: Setting up poetry
        uses: abatilo/actions-poetry@v2.0.0
      - name: Installing poetry
        run: poetry install
      - name: Checking formatting
        run: poetry run black . --check --diff
      - name: Running isort
        run: poetry run isort . --check --diff
      - name: Testing with pytest
        run: if [ -d tests ] || [ -d test ]; then poetry run python -m pytest; fi